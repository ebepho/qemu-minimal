#!/bin/bash
#
# create - a script to create a debian or ubuntu rootfs.
#
# Note you must have nbd kernel module probed and deboostrap
# installed. Also needs qemu tools.
#
# For example, to setup and run a Ubuntu Bionic Beaver based rootfs:
#
# 1. sudo NAME=images/bionic.qcow2 SIZE=16G DISTRO=bionic ./scripts/create
# 2. sudo ./scripts/setup images/bionic.qcow2
# 3. sudo ./scripts/shrink images/bionic.qcow2
# 4. sudo chown <user>:<group> images/bionic.qcow2
# 5. ./runqemu <options> -i images/bionic.qcow2 <kernel bzImage>
#
# NB For some reason networking does not always work out of the
# box. Try dhclient <iface> inside the VM to resolve that.

NAME=${NAME:-$1}
DISTRO=${DISTRO:-debian}
SIZE=${SIZE:-8G}
PKGS=${PKGS:-$2}

set -e

qemu-img create -f qcow2 ${NAME} ${SIZE}
qemu-nbd -c /dev/nbd0 ${NAME}

sfdisk /dev/nbd0 -uS << EOF > /dev/null
,1048576,167936
;
EOF

mkswap -L swap /dev/nbd0p1
mkfs.ext4 -L rootfs /dev/nbd0p2

mkdir -p mnt
mount /dev/nbd0p2 mnt


function cleanup {
    set +e
    umount mnt
    qemu-nbd -d /dev/nbd0
}

trap cleanup EXIT

if [ $DISTRO == "debian" ]; then
    debootstrap \
	--include=less,locales-all,vim,sudo,openssh-server,jed,pciutils,bash-completion,psmisc,htop,pydf,${PKGS}\
	stable mnt
elif [ $DISTRO == "ubuntu" ]; then
    debootstrap \
	--components=main,universe \
	--include=less,vim,sudo,openssh-server,pciutils,bash-completion,psmisc,htop,tmux,curl,wget,emacs25-nox,htop,dnsutils,${PKGS} \
	bionic mnt
else
    echo "${DISTRO} distro not supported by deboostrap"
    cleanup
fi

echo "create of ${NAME} complete!"
